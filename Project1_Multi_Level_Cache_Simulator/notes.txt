#define DATASET

#ifdef DATASET
        
#endif

void addToDatasetV1(char *trace_file_name, cache_t *multilevel_cache){
    FILE *datasetFile;
    if(datasetFile = fopen("cacheDataset.csv", "r")){
        
    }
    else{
        datasetFile = fopen("cacheDataset.csv", "w");
        fprintf(datasetFile,"trace_file, direct, 2-way, 4-way, 8-way, fully\n");
        fprintf("%s", trace_file_name);
        switch(multilevel_cache[0].WAY_SIZE){
            case 1:
                fprintf("%f,,,,\n", (double)multilevel_cache[0].hits/(double)(multilevel_cache[0].hits + multilevel_cache[0].misses));
                break;
            case 2:
                fprintf(",%f,,,\n", (double)multilevel_cache[0].hits/(double)(multilevel_cache[0].hits + multilevel_cache[0].misses));
                break;
            case 4:
                fprintf(",,%f,,\n", (double)multilevel_cache[0].hits/(double)(multilevel_cache[0].hits + multilevel_cache[0].misses));
                break;
            case 8:
                fprintf(",,,%f,\n", (double)multilevel_cache[0].hits/(double)(multilevel_cache[0].hits + multilevel_cache[0].misses));
                break;
            default:
                if(multilevel_cache[0].WAY_SIZE == multilevel_cache[0].NUM_BLOCKS)fprintf(",,,,%f\n", (double)multilevel_cache[0].hits/(double)(multilevel_cache[0].hits + multilevel_cache[0].misses));
                break;
        }
        fclose(datasetFile);
    }
}